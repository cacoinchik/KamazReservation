@inject HttpClient client

@if (bookings != null)
{
    <MudTable Bordered="true" Items="@bookings">
        <ToolBarContent>
            <MudText Style="text-align: center">Бронирования места № @ps.Number</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Время начала бронирования</MudTh>
            <MudTh>Время конца бронирования</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.StartTime.ToString("HH:mm")</MudTd>
            <MudTd>@context.EndTime.ToString("HH:mm")</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {

    [Parameter]
    public ParkingSpace ps { get; set; }

    [Parameter]
    public DateTime? selectDate { get; set; }

    IEnumerable<Booking>? bookings { get; set; }

    protected override async Task OnInitializedAsync()
    {
        bookings = await client.GetFromJsonAsync<IEnumerable<Booking>>("/api/parking/bookings");
        bookings = bookings?.Where(s => s.ParkingSpaceId == ps.Id);
        SelectDate();
    }

    private void SelectDate()
    {
        bookings = bookings?.Where(t => t.StartTime.Date == selectDate);
        bookings = bookings?.OrderBy(t => t.StartTime);
    }

}




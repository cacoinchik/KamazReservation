@inject HttpClient client

<h2>Здравствуйте, @user.Name @user.LastName</h2>

<MudGrid>
    <MudItem>
        <h3>Личные данные</h3>
        <p>Логин: @user.UserName</p>
        <p>Имя: @user.Name</p>
        <p>Фамилия: @user.LastName</p>
    </MudItem>
    <MudItem>
        <h3>Данные об автомобиле</h3>
        <p>Марка: @user.CarBrand</p>
        <p>Модель: @user.CarModel</p>
        <p>Номер автомобиля: @user.CarNumber</p>
    </MudItem>
</MudGrid>

<h3>Ваши бронирования</h3>
@if (userBookings != null)
{
    foreach (var booking in userBookings)
    {
        <p>@booking.PlaceNumber</p>
        <p>@booking.StartTime</p>
        <p>@booking.EndTime</p>
    }

    <MudExpansionPanels>
        <MudExpansionPanel Text="История бронирований">
            <table>
                <thead>
                    <tr>
                        <th>№</th>
                        <th>фа</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var booking in archivBookings)
                    {
                        <tr>
                            <th>@booking.Name</th>
                            <th>@booking.StartTime</th>
                            <th>@booking.EndTime</th>
                        </tr>
                    }
                </tbody>
            </table>
        </MudExpansionPanel>
    </MudExpansionPanels>
}
else
{
    <text>История ваших броинрвоаний пуста</text>
}


@code {
    [Parameter]
    public User user { get; set; }

    IEnumerable<Booking>? userBookings { get; set; }
    IEnumerable<Booking>? archivBookings { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            userBookings = await client.GetFromJsonAsync<IEnumerable<Booking>>("/api/booking");
            if (userBookings != null)
            {
                userBookings = userBookings.OrderBy(t => t.StartTime);
                archivBookings = userBookings.Where(u => u.UserName == user.UserName && u.IsActive == false);
                userBookings = userBookings.Where(u => u.UserName == user.UserName && u.IsActive == true);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}